---
layout: post
title:  "Understanding the Box Model of html elements"
comments: true
tags: [client-side,css,html]
---

I've just came across some issue that can drive anyone who try to design a web page, that won't be viewed differently on more than one targeted browser.It's our furtune that most our clients are in Israel, where everyone uses IE, but the increasing use of FireFox, and the upcoming clients who needs an overseas working solutions, are leading me into finding best practices for cross-browser, same looking web pages design.I'll target the most widely used (or talked about) browsers at Israel: Internet Explorer 6.0 (IE), and FireFox 1.5 (FF)So here is a little example.Look at the following html page:   
&lt;html&gt;   &lt;head&gt;      &lt;style type="text/css"&gt; &lt;!--        div        {         width: 100px;         height: 100px;         background-color: aquamarine;         border: 10px black solid;        }        #div1        {         padding: 10px 10px 10px 10px;        }        #div2        {         margin: 10px 10px 10px 10px;        }        #div3        {         border-width: 0px;        } --&gt;      &lt;/style&gt;   &lt;/head&gt;   &lt;body&gt;      &lt;div id="div1"&gt;div1&lt;/div&gt;      &lt;div id="div2"&gt;div2&lt;/div&gt;      &lt;div id="div3"&gt;div3&lt;/div&gt;   &lt;/body&gt;&lt;/html&gt;
This page is sopposed to render 3 100*100 divs, the first with a 10px padding (distance between border and inner content), and the second with a 10px margin (distance between the border and other elements). The third div has no margin, no padding and no border, and is used for comparing with the first two, showing what a 100*100 sized div should look like.Amazingly, IE and FF will render it differently:![](http://kenegozi.com/blog/uploaded/ievsfirefoxcsssizing1.png)Let's see what is the difference:The simple 100*100 div (div3) was rendered the same on both browsers, except the default font. In the bordered and margined div (div2) things are different:in IE, the border is renderd in the div, so the div with the border is still 100px wide. the inner content is now only 80*80in FF, the border is rendered outside of the div, so now the div (including the border) is 120px wide, and the inner content is still 100*100the margin magic is done the same. it is rendering a 10px unseen border around the div, in both browsers.Finally: the bordered and padded div (div2).in IE, the padding space is, again (as with the border), renderd in the div, between the border and the inner content, so the div with the border and padding is still 100px wide, and the inner content is now only 60*60 !!!in FF, the padding space is rendered outside of the inner content, so now the div (including the border and padding) is 140px wide, and the inner content is still 100*100The IE approach is better for ppl who want to change the border and padding of elements without changing the overall page layout, while the FF approach is better for ppl who thing than the inner content of elements is too important to be covered by borders and padding space ...which is better? let's ask the W3C.The answer is given at [http://www.w3.org/TR/CSS21/box.html](http://www.w3.org/TR/CSS21/box.html), and the following diagram of a html element edges is taken from there:![](http://kenegozi.com/blog/uploaded/boxdim.png)as well as the next quote from just beneath the diagram:  
**content edge** or **inner edge**The content edge surrounds the rectangle given by the width and height of the box ... 
So according to the W3C, the width and height should refer to inner content of the div (as FF thinks), and not to the border edge (as IE thinks).That leads to the thought that it's resonable that future releases of IE will do the same as FF do now.But what about today? how do we design in the W3C way, and making the IE understand it the way we want it to?Well, IE can undertand pages as it's supposed to, if we'd only tell him to.Doctyping the listed page, eiether as HTML4.01 or XHTML1.0, tells IE how to render the page, and then the expected behaviour is achieved.HTML4.01 doctype: &lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;XHTML1.0 doctype: &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;For those of us using Visual Studio .NET to generate webforms and webpages, the IDE is generating those doctypes for any new item. VS2003 uses HTML4.01, while VS2005 uses XHTML1.0But there is still a need to do that manually, when you render a page manually, say using a xslt transform from xml resource.I'd recommend using XHTML1.0 transitional as a mininum doctype, and doing your best to make your pages compliant with this standard. It's making your page look and behaviour much more expected and keeps you from angry clients with a specific browser version. It is also a best practice to program well. Web programming is is the same as any other, and the fact that browsers allow us to make mistakes doesn't mean that we have to. Imagine VB programmers using only Variant type variables - they'd probably get throwen off the nearest window during code-reviews ...It's true that sometimes we have to make an exception and do some browser specific stuff in order to make things work, and that is exactly a perfect time for some inline remark to explain the reason for doing that. It is also true that ASP.NET 2.0 itself isn't as XHTML complaiant as it claims, but then again - we'll do our best to program well and to deliver quality and complaiant code, if only for the sake of doing things right. be good, and remember: Winning is the science of being prepared.Ken
